{"version":3,"sources":["Components/SearchBar/SearchBar.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Services/apiServices.js","Components/Loader/Loader.jsx","Components/Modal/Modal.jsx","Components/Button/Button.jsx","App.js","index.js"],"names":["SearchBar","state","searchQuery","handleSubmit","e","preventDefault","trim","props","onSubmit","setState","toast","info","handleChange","currentTarget","value","className","this","type","onChange","name","searcQuery","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","webformatURL","largeImageURL","getLargeImageURL","src","alt","onClick","ImageGallery","images","onSelect","map","tags","id","axios","defaults","baseURL","Api","getPictures","query","page","get","then","resp","data","hits","Loader","color","height","width","timeout","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","React","Button","fetchImages","App","loading","error","showModal","selectedImage","toggleModal","handleSelectImage","imageUrl","Squery","prevState","scrollTo","top","documentElement","scrollHeight","behavior","catch","_error","finally","_prevProps","length","position","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0a4e2111.chunk.js","sourcesContent":["import { toast } from \"react-toastify\";\r\n// import { queries } from '@testing-library/dom';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport React, { Component } from \"react\";\r\n// import Api from \"../Services/apiServices\";\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    searchQuery: \"\",\r\n  };\r\n\r\n  \r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.searchQuery.trim() === \"\") {\r\n      toast.info(\"Ти щось таке шукаєш...\");\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state.searchQuery);\r\n    this.setState({ searchQuery: \"\" });\r\n  };\r\n  \r\n  handleChange = (e) => {\r\n    this.setState({\r\n      searchQuery: e.currentTarget.value,\r\n    });\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            onChange={this.handleChange}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            name=\"query\"\r\n            value={this.props.searcQuery}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ImageGalleryItem({ webformatURL, largeImageURL, getLargeImageURL }) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={webformatURL}\r\n        alt=\"\"\r\n        onClick={() => getLargeImageURL(largeImageURL)}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    webformatURL: PropTypes.string.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    alt: PropTypes.string,\r\n    getLargeImageURL: PropTypes.func.isRequired,\r\n  }),\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\n\r\n\r\nfunction ImageGallery({ images, onSelect })  {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(({  webformatURL, largeImageURL, tags, id}) => (\r\n        <ImageGalleryItem\r\n          // image={image}\r\n          key={id}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          alt={tags}\r\n          getLargeImageURL={onSelect}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  onSelect: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import axios from \"axios\";\r\naxios.defaults.baseURL = \"https://pixabay.com/api\";\r\nconst API_KEY = \"23035715-e0cb760b48ddc49b0eff80b6c\";\r\n\r\nfunction getPictures({ query, page }) {\r\n  return axios\r\n    .get(\r\n      `/?image_type=photo&orientation=horizontal&q=${query}&page=${page}&per_page=12&key=${API_KEY}`\r\n    )\r\n    .then((resp) => resp.data.hits);\r\n}\r\n\r\nconst Api = {\r\n  getPictures,\r\n};\r\nexport default Api;\r\n","import React from \"react\";\r\nimport MyLoader from \"react-loader-spinner\";\r\n\r\nfunction Loader () {\r\n \r\n    return (\r\n      <MyLoader\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n      />\r\n    );\r\n  }\r\n\r\nexport  default Loader;  \r\n\r\n\r\n","import React from \"react\";\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\nclass  Modal extends React.Component {\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\ncomponentDidMount() {\r\n  window.addEventListener('keydown', this.handleKeyDown);\r\n}\r\ncomponentWillUnmount() {\r\n  window.removeEventListener('keydown', this.handleKeyDown);\r\n}\r\nhandleBackdropClick = e => {\r\n  if (e.currentTarget === e.target) {\r\n    this.props.onClose();\r\n  }\r\n};\r\nrender(){\r\n  return  createPortal (\r\n    <div onClick={this.handleBackdropClick} className=\"Overlay\">\r\n      <div className=\"Modal\">\r\n        <img src={this.props.largeImageURL} alt=\"\" />\r\n      </div>\r\n    </div>,\r\n \r\n      modalRoot,\r\n  );\r\n}\r\n\r\n \r\n};\r\n\r\nexport default Modal;\r\n\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ fetchImages }) => {\r\n  return (\r\n    <button type=\"button\" onClick={fetchImages}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  fetchImages: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport SearchBar from \"./Components/SearchBar/SearchBar\";\nimport ImageGallery from \"./Components/ImageGallery/ImageGallery\";\nimport Api from \"./Components/Services/apiServices\";\nimport Loader from \"./Components/Loader/Loader\";\nimport Modal from \"./Components/Modal/Modal\";\nimport Button from \"./Components/Button/Button\";\n\nclass App extends Component {\n  state = {\n    query: \"\",\n    images: [],\n    loading: false,\n    error: null,\n    showModal: false,\n    selectedImage: \"\",\n    page: 1,\n  };\n\n  // componentDidUpdate(_prevProps, prevState) {\n  //   const prevSearchQuery = prevState.query;\n  //   const nextSearchQuery = this.state.query;\n  //   if (prevSearchQuery !== nextSearchQuery) {\n  //     this.fetchImages();\n  //   }\n\n  //   if (prevState.page !== this.state.page && this.state.page !== 2) {\n  //     window.scrollTo({\n  //       top: document.documentElement.scrollHeight,\n  //       behavior: \"smooth\",\n  //     });\n  //   }\n  // }\n\n  componentDidUpdate(_prevProps, prevState) {\n    if (prevState.query !== this.state.query) {\n      this.fetchImages();\n    }\n    if (this.state.page !== 2 && prevState.page !== this.state.page) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }\n  }\n\n  // componentDidUpdate(_, prevState) {\n  //   if (prevState.query !== this.state.query) {\n  //     this.fetchImages();\n  //   }\n  //   if (this.state.page !== 2 && prevState.page !== this.state.page) {\n  //     window.scrollTo({\n  //       top: document.documentElement.scrollHeight,\n  //       behavior: \"smooth\",\n  //     });\n  //   }\n  // }\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  handleSelectImage = (imageUrl) => {\n    this.setState({ selectedImage: imageUrl });\n    this.toggleModal();\n  };\n\n  handleSubmit = (Squery) => {\n    this.setState({ images: [], query: Squery, page: 1 });\n  };\n\n  fetchImages = () => {\n    const { query, page } = this.state;\n    this.setState({ loading: true });\n    Api.getPictures({ query, page })\n      .then((hits) => {\n        this.setState((prevState) => ({\n          images: [...prevState.images, ...hits],\n          page: prevState.page + 1,\n        }));\n      })\n      .then(() => {\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: \"smooth\",\n        });\n      })\n      .catch((_error) => this.setState({ error: true }))\n      .finally(() => this.setState({ loading: false }));\n  };\n\n  render() {\n    const { selectedImage, showModal, loading, images, error } = this.state;\n    return (\n      <div>\n        {error && toast.error(\"OOO, something is wrong!\")}\n        <SearchBar onSubmit={this.handleSubmit} />\n        <ImageGallery\n          images={this.state.images}\n          onSelect={this.handleSelectImage}\n        />\n        {images.length > 0 && <Button fetchImages={this.fetchImages} />}\n\n        {loading && <Loader />}\n\n        {showModal && (\n          <Modal onClose={this.toggleModal} largeImageURL={selectedImage} />\n        )}\n        <ToastContainer position=\"bottom-right\" autoClose={3000} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}